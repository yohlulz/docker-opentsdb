# --------- NETWORK ----------
# The TCP port TSD should use for communications
# *** REQUIRED ***
tsd.network.port = 4242

# The IPv4 network address to bind to, defaults to all addresses
# tsd.network.bind = 0.0.0.0

# Enables Nagel's algorithm to reduce the number of packets sent over the
# network, default is True
#tsd.network.tcpnodelay = true

# Determines whether or not to send keepalive packets to peers, default
# is True
#tsd.network.keepalive = true

# Determines if the same socket should be used for new connections, default
# is True
#tsd.network.reuseaddress = true

# Number of worker threads dedicated to Netty, defaults to # of CPUs * 2
tsd.network.worker_threads = 10

# Whether or not to use NIO or tradditional blocking IO, defaults to True
#tsd.network.async_io = true

# ----------- HTTP -----------
# The location of static files for the HTTP GUI interface.
# *** REQUIRED ***
tsd.http.staticroot = /opt/opentsdb/build/staticroot

# Where TSD should write it's cache files to
# *** REQUIRED ***
tsd.http.cachedir = /opt/data/cache

# --------- CORE ----------
# Whether or not to automatically create UIDs for new metric types, default
# is False
tsd.core.auto_create_metrics = true

# Full path to a directory containing plugins for OpenTSDB
tsd.core.plugin_path = /opt/data/tsdb/plugins

# --------- STORAGE ----------
# Whether or not to enable data compaction in HBase, default is True
tsd.storage.enable_compaction = false

# How often, in milliseconds, to flush the data point queue to storage,
# default is 1,000
# tsd.storage.flush_interval = 1000

# Name of the HBase table where data points are stored, default is "tsdb"
#tsd.storage.hbase.data_table = tsdb

# Name of the HBase table where UID information is stored, default is "tsdb-uid"
#tsd.storage.hbase.uid_table = tsdb-uid

# Path under which the znode for the -ROOT- region is located, default is "/hbase"
#tsd.storage.hbase.zk_basedir = /hbase

# A space separated list of Zookeeper hosts to connect to, with or without
# port specifiers, default is "localhost"
# hbase - docker container name of running hbase
tsd.storage.hbase.zk_quorum = hbase

# Whether or not the TSD will allow writing data points. Must be either rw to allow writing data or ro to block data point writes. Note that meta data such as UIDs can still be written/modified.
# rw or ro
tsd.mode = rw

#Whether or not to enable incoming chunk support for the HTTP RPC
tsd.http.request.enable_chunked=true

#The maximum request body size to support for incoming HTTP requests when chunking is enabled.
tsd.http.request.max_chunk=900000000

# How long, in milliseconds, before canceling a running query. A value of 0 means queries will not timeout.
# !!! Only from version >= 2.2
#tsd.query.timeout = 0


